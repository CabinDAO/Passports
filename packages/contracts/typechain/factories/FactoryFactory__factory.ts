/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FactoryFactory,
  FactoryFactoryInterface,
} from "../FactoryFactory";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "FactoryDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "create",
    outputs: [
      {
        internalType: "contract PassportFactory",
        name: "passportFactory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "factories",
    outputs: [
      {
        internalType: "contract PassportFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factoryId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060015534801561001557600080fd5b5061003261002761003760201b60201c565b61003f60201b60201c565b610103565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611163806101126000396000f3fe60806040523480156200001157600080fd5b50600436106200006a5760003560e01c806304ce07f1146200006f578063672383c41462000091578063715018a614620000c75780638da5cb5b14620000d3578063efc81a8c14620000f5578063f2fde38b1462000117575b600080fd5b6200007962000137565b60405162000088919062000674565b60405180910390f35b620000af6004803603810190620000a9919062000549565b6200013d565b604051620000be919062000613565b60405180910390f35b620000d162000170565b005b620000dd62000201565b604051620000ec9190620005f6565b60405180910390f35b620000ff6200022a565b6040516200010e919062000613565b60405180910390f35b6200013560048036038101906200012f91906200051d565b62000311565b005b60015481565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6200017a62000415565b73ffffffffffffffffffffffffffffffffffffffff166200019a62000201565b73ffffffffffffffffffffffffffffffffffffffff1614620001f3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001ea9062000652565b60405180910390fd5b620001ff60006200041d565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060016000815480929190620002429062000708565b919050559050336040516200025790620004e1565b620002639190620005f6565b604051809103906000f08015801562000280573d6000803e3d6000fd5b506002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ffc9068ce17c880dcd4f07a09974664fdaea37f146b12f83aaa09425bd1b1fd0c60015460405162000305919062000674565b60405180910390a15090565b6200031b62000415565b73ffffffffffffffffffffffffffffffffffffffff166200033b62000201565b73ffffffffffffffffffffffffffffffffffffffff161462000394576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200038b9062000652565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000407576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003fe9062000630565b60405180910390fd5b62000412816200041d565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6108fc806200083283390190565b6000813590506200050081620007fd565b92915050565b600081359050620005178162000817565b92915050565b6000602082840312156200053057600080fd5b60006200054084828501620004ef565b91505092915050565b6000602082840312156200055c57600080fd5b60006200056c8482850162000506565b91505092915050565b6200058081620006a2565b82525050565b6200059181620006e0565b82525050565b6000620005a660268362000691565b9150620005b38262000785565b604082019050919050565b6000620005cd60208362000691565b9150620005da82620007d4565b602082019050919050565b620005f081620006d6565b82525050565b60006020820190506200060d600083018462000575565b92915050565b60006020820190506200062a600083018462000586565b92915050565b600060208201905081810360008301526200064b8162000597565b9050919050565b600060208201905081810360008301526200066d81620005be565b9050919050565b60006020820190506200068b6000830184620005e5565b92915050565b600082825260208201905092915050565b6000620006af82620006b6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620006ed82620006f4565b9050919050565b60006200070182620006b6565b9050919050565b60006200071582620006d6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156200074b576200074a62000756565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6200080881620006a2565b81146200081457600080fd5b50565b6200082281620006d6565b81146200082e57600080fd5b5056fe608060405234801561001057600080fd5b506040516108fc3803806108fc83398181016040528101906100329190610277565b61004e61004361006360201b60201c565b61006b60201b60201c565b61005d8161012f60201b60201c565b506103f8565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61013d61006360201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1661016161023960201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146101b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ae90610306565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e906102e6565b60405180910390fd5b6102368161006b60201b60201c565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081519050610271816103e1565b92915050565b60006020828403121561028957600080fd5b600061029784828501610262565b91505092915050565b60006102ad602683610326565b91506102b882610369565b604082019050919050565b60006102d0602083610326565b91506102db826103b8565b602082019050919050565b600060208201905081810360008301526102ff816102a0565b9050919050565b6000602082019050818103600083015261031f816102c3565b9050919050565b600082825260208201905092915050565b600061034282610349565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6103ea81610337565b81146103f557600080fd5b50565b6104f5806104076000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b610058610112565b6040516100659190610392565b60405180910390f35b61008860048036038101906100839190610314565b61013b565b005b610092610233565b73ffffffffffffffffffffffffffffffffffffffff166100b0610112565b73ffffffffffffffffffffffffffffffffffffffff1614610106576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fd906103cd565b60405180910390fd5b610110600061023b565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610143610233565b73ffffffffffffffffffffffffffffffffffffffff16610161610112565b73ffffffffffffffffffffffffffffffffffffffff16146101b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ae906103cd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e906103ad565b60405180910390fd5b6102308161023b565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061030e816104a8565b92915050565b60006020828403121561032657600080fd5b6000610334848285016102ff565b91505092915050565b610346816103fe565b82525050565b60006103596026836103ed565b915061036482610430565b604082019050919050565b600061037c6020836103ed565b91506103878261047f565b602082019050919050565b60006020820190506103a7600083018461033d565b92915050565b600060208201905081810360008301526103c68161034c565b9050919050565b600060208201905081810360008301526103e68161036f565b9050919050565b600082825260208201905092915050565b600061040982610410565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6104b1816103fe565b81146104bc57600080fd5b5056fea264697066735822122052864f95f7b09df4fb3819bb036cc6ef82db1cf046c72106f1b92b78617557dd64736f6c63430008040033a2646970667358221220363c1c01cc787c1ca9ed759a4b24460842621c04df8083639d46228c8b240a7264736f6c63430008040033";

export class FactoryFactory__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FactoryFactory> {
    return super.deploy(overrides || {}) as Promise<FactoryFactory>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FactoryFactory {
    return super.attach(address) as FactoryFactory;
  }
  connect(signer: Signer): FactoryFactory__factory {
    return super.connect(signer) as FactoryFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FactoryFactoryInterface {
    return new utils.Interface(_abi) as FactoryFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FactoryFactory {
    return new Contract(address, _abi, signerOrProvider) as FactoryFactory;
  }
}
